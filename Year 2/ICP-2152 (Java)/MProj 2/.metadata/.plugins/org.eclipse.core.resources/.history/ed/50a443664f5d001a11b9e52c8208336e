import java.awt.EventQueue;
import java.awt.Image;

import javax.swing.JFrame;
import javax.swing.JPanel;
import java.awt.BorderLayout;
import javax.swing.JTextField;
import javax.swing.JLabel;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JTextArea;
import java.awt.event.ActionListener;
import java.io.File;
import java.awt.event.ActionEvent;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

public class WeatherAppViewer {

	private JFrame frmGetBbcWeather;
	private JTextField txtUrl;
	private JLabel lblUrl;
	private JTextArea txtaForecast;
	private JButton btnForecast;
	private JLabel weatherIcon;
	
	private WeatherRSSParser parser = new DOMXPathWeatherRSSParserImpl();
	private JTable tblDesc;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					WeatherAppViewer window = new WeatherAppViewer();
					window.frmGetBbcWeather.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the application.
	 */
	public WeatherAppViewer() {
		initialize();
	}

	/**
	 * Initialize the contents of the frame.
	 */
	private void initialize() {
		frmGetBbcWeather = new JFrame();
		frmGetBbcWeather.setTitle("Get BBC Weather");
		frmGetBbcWeather.setBounds(100, 100, 450, 300);
		frmGetBbcWeather.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		
		JPanel panel = new JPanel();
		frmGetBbcWeather.getContentPane().add(panel, BorderLayout.CENTER);
		panel.setLayout(null);
		/*
		lblUrl = new JLabel("URL: ");
		lblUrl.setBounds(51, 44, 31, 16);
		panel.add(lblUrl);
		*/
		lblUrl = new JLabel("Location: ");
		lblUrl.setBounds(26, 44, 56, 16);
		panel.add(lblUrl);
		
		txtUrl = new JTextField();
		txtUrl.setBounds(94, 41, 260, 22);
		txtUrl.setText("");
		panel.add(txtUrl);
		txtUrl.setColumns(10);
		
		btnForecast = new JButton("Forecast");
		btnForecast.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {
				if (!txtUrl.getText().contentEquals("")) {
					String gid = parser.getGeoId(txtUrl.getText().toLowerCase());					
					parser.setURL(gid);
					//set text area
					try {
						String fcast = parser.getHeadlines();
						txtaForecast.setText(fcast);
						String[][] fdesc = parser.getDescription(); 
						tblDesc.setModel(new DefaultTableModel(
								fdesc));
					} catch (IllegalArgumentException e) {
						//if URL is incorrect, display error message in text area
						txtaForecast.setText("An error occurred, " + e.getMessage());
					}
					//set weather icon
					try {
						String fcast = parser.getHeadlines();
						fcast = fcast.substring(fcast.indexOf(": ") + 2);
						fcast = fcast.substring(0, fcast.indexOf(", "));						
						ImageIcon icn = new ImageIcon(getClass().getResource("/" + fcast + ".png"));
						weatherIcon.setIcon(icn);					
						
					} catch (NullPointerException e) {
						//if image file for the weather type doesn't exist
						//or if the weather condition is "Not available", set to the 'Not available' icon
						ImageIcon icn = new ImageIcon(getClass().getResource("/Not available.png"));
						weatherIcon.setIcon(icn);
					}
				}
			}
		});
		btnForecast.setBounds(167, 76, 97, 25);
		panel.add(btnForecast);
		
		txtaForecast = new JTextArea();
		txtaForecast.setBounds(12, 114, 290, 40);
		panel.add(txtaForecast);
		//*/
		weatherIcon = new JLabel(new ImageIcon(getClass().getResource("/Not available.png")));
		weatherIcon.setBounds(314, 125, 106, 106);
		panel.add(weatherIcon);
		
		tblDesc = new JTable();
		tblDesc.setBounds(12, 235, 290, -76);
		panel.add(tblDesc);
		//*/
	}
}
